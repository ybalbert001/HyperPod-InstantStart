---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-s3-qwen-qwen3-0-6b-inference
  labels:
    app: vllm-s3-qwen-qwen3-0-6b-inference
    model-type: "vllm"
    model-id: "s3-qwen-qwen3-06b"
    model-tag: "s3-qwen-qwen3-0-6b"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vllm-s3-qwen-qwen3-0-6b-inference
  template:
    metadata:
      labels:
        app: vllm-s3-qwen-qwen3-0-6b-inference
    spec:
      containers:
        - name: vllm-openai
          image: vllm/vllm-openai:latest
          resources:
            limits:
              nvidia.com/gpu: 1
            requests:
              cpu: "4"
              memory: 8Gi
              nvidia.com/gpu: 1
          command: ["vllm","serve","/s3/Qwen-Qwen3-0.6B","--max-num-seqs","32","--max-model-len","1280","--tensor-parallel-size","1","--host","0.0.0.0","--port","8000","--trust-remote-code"]
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - name: persistent-storage-s3
              mountPath: /s3
              readOnly: true
            - name: local-cache
              mountPath: /root/.cache
            - name: shm
              mountPath: /dev/shm
          env:
            - name: TRANSFORMERS_CACHE
              value: "/root/.cache/huggingface"
          securityContext:
            capabilities:
              add:
                - IPC_LOCK
      volumes:
        - name: persistent-storage-s3
          persistentVolumeClaim:
            claimName: s3-claim
        - name: local-cache
          hostPath:
            path: /opt/dlami/nvme/.cache
            type: DirectoryOrCreate
        - name: shm
          emptyDir:
            medium: Memory
            sizeLimit: 2Gi
      tolerations:
        - key: "nvidia.com/gpu"
          operator: "Exists"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-s3-qwen-qwen3-0-6b-nlb
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  ports:
    - port: 8000
      protocol: TCP
      targetPort: http
  selector:
    app: vllm-s3-qwen-qwen3-0-6b-inference
  type: LoadBalancer
